import { STATUS_CODES } from "./status.types";

// Error Type
export const ERROR_STATUS_MAP = {
  // Validation errors
  BAD_REQUEST: STATUS_CODES.BAD_REQUEST,
  VALIDATION_ERROR: STATUS_CODES.BAD_REQUEST,
  EMAIL_REQUIRED: STATUS_CODES.BAD_REQUEST,
  EMAIL_INVALID: STATUS_CODES.BAD_REQUEST,
  PASSWORD_REQUIRED: STATUS_CODES.BAD_REQUEST,
  PASSWORD_TOO_SHORT: STATUS_CODES.BAD_REQUEST,
  ACCESS_TOKEN_REQUIRED: STATUS_CODES.BAD_REQUEST,
  REFRESH_TOKEN_REQUIRED: STATUS_CODES.BAD_REQUEST,
  UPDATE_ERROR: STATUS_CODES.BAD_REQUEST,

  // Authentication errors
  AUTH_ERROR: STATUS_CODES.UNAUTHORIZED,
  INVALID_CREDENTIALS: STATUS_CODES.UNAUTHORIZED,
  EMAIL_NOT_CONFIRMED: STATUS_CODES.UNAUTHORIZED,
  INVALID_RESET_TOKEN: STATUS_CODES.UNAUTHORIZED,

  // Business logic errors
  USER_ALREADY_EXISTS: STATUS_CODES.CONFLICT,
  DELETED_USER: STATUS_CODES.FORBIDDEN,
  EMAIL_NOT_FOUND: STATUS_CODES.NOT_FOUND,
  LOGIN_FAILED: STATUS_CODES.BAD_REQUEST,
  NOT_FOUND: STATUS_CODES.NOT_FOUND,
  FORBIDDEN: STATUS_CODES.FORBIDDEN,

  // Server errors
  INTERNAL_ERROR: STATUS_CODES.INTERNAL_SERVER_ERROR,
  SIGNUP_DISABLED: STATUS_CODES.FORBIDDEN,
  SESSION_ERROR: STATUS_CODES.BAD_GATEWAY,
} as const;

export type ErrorCode = keyof typeof ERROR_STATUS_MAP;

// Supabase error interface
export interface SupabaseAuthError {
  error_code?: string;
  code?: string;
  message?: string;
  status?: number;
}
